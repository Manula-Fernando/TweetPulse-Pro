services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "bash", "-lc", "kafka-broker-api-versions --bootstrap-server localhost:9092 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

  mongodb:
    image: mongo:6.0
    ports:
      - "27018:27017"
    volumes:
      - mongo_data:/data/db

  producer:
    build:
      context: .
      dockerfile: Dockerfile.producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - CSV_FILE=twitter_validation.csv
    volumes:
      - ./:/app

  consumer:
    build:
      context: .
    
      dockerfile: Dockerfile.consumer
    depends_on:
      - kafka
      - mongodb
    environment:
      - PYTHONUNBUFFERED=1
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - MONGODB_HOST=mongodb
      - MONGODB_PORT=27017
    volumes:
      - ./:/app

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      - mongodb
    environment:
      - PYTHONUNBUFFERED=1
      - MONGO_URI=mongodb://mongodb:27017/
      - MONGO_DB=bigdata_project
      - MONGO_COLLECTION=tweets
    ports:
      - "5000:5000"
    volumes:
      - ./:/app

  dashboard:
    build:
      context: ..
      dockerfile: tweetpulse-dashboard/Dockerfile.dashboard
    working_dir: /app
    command: ["bash", "-lc", "python manage.py migrate && python manage.py collectstatic --noinput && python manage.py runserver 0.0.0.0:8000"]
    ports:
      - "8000:8000"
    depends_on:
      - api
      - mongodb
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - MONGO_DB=bigdata_project

volumes:
  mongo_data: {}
